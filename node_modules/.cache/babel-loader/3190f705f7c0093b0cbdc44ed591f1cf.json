{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Emerson\\\\Documents\\\\MagnaFarm\\\\web\\\\src\\\\routes.js\";\nimport React from 'react';\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport { isAuthenticated } from \"./services/auth\";\nimport Login from './pages/login';\nimport Main from './pages/main';\nimport Usuarios from './pages/usuarios';\nimport Usuario from './pages/usuario';\nimport Propriedades from './pages/propriedades';\n\nconst PrivateRoute = ({\n  component: Component,\n  ...rest\n}) => /*#__PURE__*/_jsxDEV(Route, { ...rest,\n  render: props => isAuthenticated() ? /*#__PURE__*/_jsxDEV(Component, { ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 13\n  }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n    to: {\n      pathname: \"/\",\n      state: {\n        from: props.location\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 13\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 13,\n  columnNumber: 5\n}, this);\n\n_c = PrivateRoute;\n\nconst Routes = () => /*#__PURE__*/_jsxDEV(BrowserRouter, {\n  children: /*#__PURE__*/_jsxDEV(Switch, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/\",\n      component: Login\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n      path: \"/inicio\",\n      component: Main\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n      path: \"/usuarios\",\n      component: Usuarios\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n      path: \"/propriedades\",\n      component: Propriedades\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/usuario/:id\",\n      component: Usuario\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"*\",\n      component: () => /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Page not found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 46\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 26,\n  columnNumber: 5\n}, this);\n\n_c2 = Routes;\nexport default Routes;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PrivateRoute\");\n$RefreshReg$(_c2, \"Routes\");","map":{"version":3,"sources":["C:/Users/Emerson/Documents/MagnaFarm/web/src/routes.js"],"names":["React","BrowserRouter","Switch","Route","Redirect","isAuthenticated","Login","Main","Usuarios","Usuario","Propriedades","PrivateRoute","component","Component","rest","props","pathname","state","from","location","Routes"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,aAAT,EAAwBC,MAAxB,EAAgCC,KAAhC,EAAuCC,QAAvC,QAAuD,kBAAvD;AACA,SAASC,eAAT,QAAgC,iBAAhC;AAEA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,YAAP,MAAyB,sBAAzB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,kBACjB,QAAC,KAAD,OACQA,IADR;AAEI,EAAA,MAAM,EAAEC,KAAK,IACbV,eAAe,kBACX,QAAC,SAAD,OAAeU;AAAf;AAAA;AAAA;AAAA;AAAA,UADW,gBAGX,QAAC,QAAD;AAAU,IAAA,EAAE,EAAE;AAAEC,MAAAA,QAAQ,EAAE,GAAZ;AAAiBC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,IAAI,EAAEH,KAAK,CAACI;AAAd;AAAxB;AAAd;AAAA;AAAA;AAAA;AAAA;AANR;AAAA;AAAA;AAAA;AAAA,QADJ;;KAAMR,Y;;AAaN,MAAMS,MAAM,GAAG,mBACX,QAAC,aAAD;AAAA,yBACI,QAAC,MAAD;AAAA,4BACI,QAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,SAAS,EAAEd;AAAjC;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,YAAD;AAAc,MAAA,IAAI,EAAC,SAAnB;AAA6B,MAAA,SAAS,EAAEC;AAAxC;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,YAAD;AAAc,MAAA,IAAI,EAAC,WAAnB;AAA+B,MAAA,SAAS,EAAEC;AAA1C;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII,QAAC,YAAD;AAAc,MAAA,IAAI,EAAC,eAAnB;AAAmC,MAAA,SAAS,EAAEE;AAA9C;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,cAAZ;AAA2B,MAAA,SAAS,EAAED;AAAtC;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,GAAZ;AAAgB,MAAA,SAAS,EAAE,mBAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAjC;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,QADJ;;MAAMW,M;AAaN,eAAeA,MAAf","sourcesContent":["import React from 'react';\r\n\r\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\r\nimport { isAuthenticated } from \"./services/auth\";\r\n\r\nimport Login from './pages/login';\r\nimport Main from './pages/main';\r\nimport Usuarios from './pages/usuarios';\r\nimport Usuario from './pages/usuario';\r\nimport Propriedades from './pages/propriedades';\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n    <Route\r\n        {...rest}\r\n        render={props =>\r\n        isAuthenticated() ? (\r\n            <Component {...props} />\r\n        ) : (\r\n            <Redirect to={{ pathname: \"/\", state: { from: props.location } }} />\r\n        )\r\n        }\r\n    />\r\n);\r\n\r\nconst Routes = () => (\r\n    <BrowserRouter>\r\n        <Switch>\r\n            <Route exact path=\"/\" component={Login} />\r\n            <PrivateRoute path=\"/inicio\" component={Main} />\r\n            <PrivateRoute path=\"/usuarios\" component={Usuarios} />\r\n            <PrivateRoute path=\"/propriedades\" component={Propriedades} />\r\n            <Route path=\"/usuario/:id\" component={Usuario} />\r\n            <Route path=\"*\" component={() => <h1>Page not found</h1>} />\r\n        </Switch>\r\n    </BrowserRouter>\r\n);\r\n\r\nexport default Routes;"]},"metadata":{},"sourceType":"module"}