{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Emerson\\\\Documents\\\\MagnaFarm\\\\web\\\\src\\\\components\\\\UploadFile\\\\index.js\";\nimport React, { Component } from \"react\";\nimport UploadFilesService from \"../../services/upload-file\";\nexport default class UploadFile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedFiles: undefined,\n      currentFile: undefined,\n      progress: 0,\n      message: \"\",\n      fileInfos: []\n    };\n  }\n\n  selectFile(event) {\n    console.log(event.target.files);\n    this.setState({\n      selectedFiles: event.target.files\n    });\n  }\n\n  upload() {\n    let currentFile = this.state.selectedFiles[0];\n    this.setState({\n      progress: 0,\n      currentFile: currentFile\n    });\n    UploadFilesService.upload(currentFile, event => {\n      this.setState({\n        progress: Math.round(100 * event.loaded / event.total)\n      });\n    }).then(response => {\n      this.setState({\n        message: response.data.message\n      });\n      return UploadFilesService.getFiles();\n    }).then(files => {\n      this.setState({\n        fileInfos: files.data\n      });\n    }).catch(() => {\n      this.setState({\n        progress: 0,\n        message: \"Could not upload the file!\",\n        currentFile: undefined\n      });\n    });\n    this.setState({\n      selectedFiles: undefined\n    });\n  }\n\n  componentDidMount() {\n    UploadFilesService.getFiles().then(response => {\n      this.setState({\n        fileInfos: response.data\n      });\n    });\n  }\n\n  render() {\n    const {\n      selectedFiles,\n      currentFile,\n      progress,\n      message,\n      fileInfos\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [currentFile && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar progress-bar-info progress-bar-striped\",\n          role: \"progressbar\",\n          \"aria-valuenow\": progress,\n          \"aria-valuemin\": \"0\",\n          \"aria-valuemax\": \"100\",\n          style: {\n            width: progress + \"%\"\n          },\n          children: [progress, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"btn btn-default\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: this.selectFile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success\",\n        disabled: !selectedFiles,\n        onClick: this.upload,\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-light\",\n        role: \"alert\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-header\",\n          children: \"List of Files\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-group list-group-flush\",\n          children: fileInfos && fileInfos.map((file, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"list-group-item\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: file.url,\n              children: file.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 23\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Emerson/Documents/MagnaFarm/web/src/components/UploadFile/index.js"],"names":["React","Component","UploadFilesService","UploadFile","constructor","props","state","selectedFiles","undefined","currentFile","progress","message","fileInfos","selectFile","event","console","log","target","files","setState","upload","Math","round","loaded","total","then","response","data","getFiles","catch","componentDidMount","render","width","map","file","index","url","name"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport UploadFilesService from \"../../services/upload-file\";\r\n\r\nexport default class UploadFile extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.state = {\r\n          selectedFiles: undefined,\r\n          currentFile: undefined,\r\n          progress: 0,\r\n          message: \"\",\r\n    \r\n          fileInfos: [],\r\n        };\r\n    }\r\n\r\n    selectFile(event) {\r\n\r\n        console.log(event.target.files);\r\n        this.setState({\r\n            selectedFiles: event.target.files,\r\n        });\r\n    }\r\n\r\n    upload() {\r\n        let currentFile = this.state.selectedFiles[0];\r\n    \r\n        this.setState({\r\n          progress: 0,\r\n          currentFile: currentFile,\r\n        });\r\n    \r\n        UploadFilesService.upload(currentFile, (event) => {\r\n          this.setState({\r\n            progress: Math.round((100 * event.loaded) / event.total),\r\n          });\r\n        }).then((response) => {\r\n            this.setState({\r\n              message: response.data.message,\r\n            });\r\n            return UploadFilesService.getFiles();\r\n        }).then((files) => {\r\n            this.setState({\r\n              fileInfos: files.data,\r\n            });\r\n        }).catch(() => {\r\n            this.setState({\r\n              progress: 0,\r\n              message: \"Could not upload the file!\",\r\n              currentFile: undefined,\r\n            });\r\n        });\r\n    \r\n        this.setState({\r\n          selectedFiles: undefined,\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        UploadFilesService.getFiles().then((response) => {\r\n          this.setState({\r\n            fileInfos: response.data,\r\n          });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n          selectedFiles,\r\n          currentFile,\r\n          progress,\r\n          message,\r\n          fileInfos,\r\n        } = this.state;\r\n    \r\n        return (\r\n          <div>\r\n            {currentFile && (\r\n              <div className=\"progress\">\r\n                <div\r\n                  className=\"progress-bar progress-bar-info progress-bar-striped\"\r\n                  role=\"progressbar\"\r\n                  aria-valuenow={progress}\r\n                  aria-valuemin=\"0\"\r\n                  aria-valuemax=\"100\"\r\n                  style={{ width: progress + \"%\" }}\r\n                >\r\n                  {progress}%\r\n                </div>\r\n              </div>\r\n            )}\r\n    \r\n            <label className=\"btn btn-default\">\r\n              <input type=\"file\" onChange={this.selectFile} />\r\n            </label>\r\n    \r\n            <button className=\"btn btn-success\"\r\n              disabled={!selectedFiles}\r\n              onClick={this.upload}\r\n            >\r\n              Upload\r\n            </button>\r\n    \r\n            <div className=\"alert alert-light\" role=\"alert\">\r\n              {message}\r\n            </div>\r\n    \r\n            <div className=\"card\">\r\n              <div className=\"card-header\">List of Files</div>\r\n              <ul className=\"list-group list-group-flush\">\r\n                {fileInfos &&\r\n                  fileInfos.map((file, index) => (\r\n                    <li className=\"list-group-item\" key={index}>\r\n                      <a href={file.url}>{file.name}</a>\r\n                    </li>\r\n                  ))}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}